<?php

use PHPUnit\Framework\TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-07-27 at 02:11:02.
 */
class Cradle_System_Storm_Event_Schema_Test extends TestCase
{
  protected $cradle;

  /**
   * Sets up the fixture, for example, opens a network connection.
   * This method is called before a test is executed.
   */
  protected function setUp()
  {
    $this->cradle = cradle();
  }

  /**
   * Tears down the fixture, for example, closes a network connection.
   * This method is called after a test is executed.
   */
  protected function tearDown()
  {
  }

  /**
   */
  public function testSchemaCreate()
  {
    $payload = $this->makePayload();

    $payload['request']->setStage(include(__DIR__.'/assets/profile.php'));

    $actual = $this->cradle->method(
      'system-schema-create',
      $payload['request'],
      $payload['response']
    );

    $this->assertTrue(!$payload['response']->isError());
  }

  /**
   */
  public function testSchemaUpdate()
  {
    $payload = $this->makePayload();

    $payload['request']->setStage(include(__DIR__.'/assets/profile.php'));

    $actual = $this->cradle->method(
      'system-schema-update',
      $payload['request'],
      $payload['response']
    );

    $this->assertTrue(!$payload['response']->isError());
  }

  /**
   */
  public function testSchemaRemove()
  {
    $payload = $this->makePayload();
    $payload['request']->setStage('name', 'profile');

    $actual = $this->cradle->method(
      'system-schema-remove',
      $payload['request'],
      $payload['response']
    );

    $this->assertTrue(!$payload['response']->isError());

    $payload = $this->makePayload();
    $payload['request']->setStage('name', 'profile');

    $actual = $this->cradle->method(
      'system-schema-restore',
      $payload['request'],
      $payload['response']
    );

    $this->assertTrue(!$payload['response']->isError());

    $payload = $this->makePayload();
    $payload['request']->setStage('name', 'profile');
    $payload['request']->setStage('mode', 'permanent');

    $actual = $this->cradle->method(
      'system-schema-remove',
      $payload['request'],
      $payload['response']
    );

    $this->assertTrue(!$payload['response']->isError());
  }

  protected function makePayload()
  {
    $payload = $this->cradle->makePayload();
    $payload['request']->meta('mysql', include(__DIR__.'/assets/mysql.php'));
    return $payload;
  }
}
